server {
  listen 80;
  listen [::]:80;
  server_name foo.com www.foo.com;
  return 301 https://foo.com$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name foo.com;

  root /var/www/foo.com/current/;
  index index.html;

  access_log  /var/log/nginx/foo.com.access.log;
  error_log   /var/log/nginx/foo.com.error.log;

  error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;

  # Prevent the Nginx version number from being emitted in error messages and
  # the Server HTTP header. To improve security.
  server_tokens off;

  # Prevent clickjacking attacks by disallowing this page from being embedded in
  # <frame>, <iframe>, <embed> or <object> unless it's the same origin.
  add_header X-Frame-Options SAMEORIGIN;

  # Prevent Internet Explorer from MIME-sniffing a response away from the
  # declared content-type.
  add_header X-Content-Type-Options nosniff;

  # Prevent cross-site scripting (XSS) attacks.
  add_header X-XSS-Protection "1; mode=block";

  # add_header Content-Security-Policy "...";
  # Source: http://tautt.com/best-nginx-configuration-for-security/

  # The SSL certificates generated by Certbot (Let's Encrypt) needed for HTTPS.
  ssl_certificate /etc/letsencrypt/live/foo.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/foo.com/privkey.pem;

  include /etc/letsencrypt/options-ssl-nginx.conf;
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
  client_max_body_size 10G;

  location /assets/ {
    # Pass requests to Fastboot
    # proxy_pass http://0.0.0.0:8001;

    # Make sure all Ember assets (JS, CSS, images, fonts, ...) are cached for a long time.
    # The Ember assets are all fingerprinted and can easily bust caches.
    expires max;
    add_header Cache-Control "public";
  }

  location / {
    try_files @fastboot @ember;
  }

  location @fastboot {
    # Pass requests to Fastboot
    proxy_pass http://0.0.0.0:8001;

    # Make sure all requests that are not assets are not cached.
    add_header Cache-Control "no-store";

    # HTTP/2 server push all files marked with the Link header
    http2_push_preload on;

    add_header Served-By-Fastboot true;
  }

  location @ember {
    include /etc/nginx/mime.types;
    try_files $uri $uri/ /index.html?/$request_uri;
    add_header Served-By-Fastboot false;
  }
}
